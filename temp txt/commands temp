commands

        case 'banall' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                client.commands.get('banall').execute(message, args);
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }
        case 'clearchannels' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                client.commands.get('banall').execute(message, args);
            }
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }
        case 'commands' : {
            client.commands.get('help').execute(message, args);
            break;
        }
        case 'help' : {
            client.commands.get('help').execute(message, args);
            break;
        }
        case 'cum' : {
            return message.reply("nice load :wink: ")
        }
        case 'ghostping' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                client.commands.get('ghostping').execute(message, args);
            }
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }
        case 'leave' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                message.guild.leave();
            }
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }
        case 'maxchannels' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                client.commands.get('maxchannels').execute(message, args);
            }
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }
        case 'nickbot' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                client.commands.get('nickbot').execute(message, args);
            }
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }
        case 'nickmass' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                client.commands.get('nickmass').execute(message, args);
            }
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }
        case 'nuke' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                message.channel.send("Disabled to stop me getting banned by discord lol.")
            }
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }
        case 'prune' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                client.commands.get('prune').execute(message, args);
            }
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }
        case 'purge' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                client.commands.get('purge').execute(message, args);
            }
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }
        case 'restart' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                client.commands.get('restart').execute(message, args);
            }
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }
        case 'reload' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                client.commands.get('restart').execute(message, args);
            }
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }
        case 'r' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                client.commands.get('restart').execute(message, args);
            }
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }
        case 'spam' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                client.commands.get('spam').execute(message, args);
            }
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }
        case 'spamall' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                client.commands.get('spamall').execute(message, args);
            }
                else {
                    return message.reply("you don't have permission!")
                }
                break;
        }
        case 'spamchannel' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                client.commands.get('spamchannel').execute(message, args);
            }
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }
        case 'spamghostping' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                client.commands.get('spamghostping').execute(message, args);
            }
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }
        case 'testperms' : {
            if(message.member.hasPermission('ADMINISTRATOR')){
                client.commands.get('testperms').execute(message, args);
            }
            else {
                return message.reply("you don't have permission!")
            }
            break;
        }